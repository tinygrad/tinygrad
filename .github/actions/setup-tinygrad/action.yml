name: Setup Python & Install
env:
  # increment this when downloads substantially change to avoid the internet
  DOWNLOAD_CACHE_VERSION: '9'
description: Sets up Python and installs project dependencies.
inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.12'
  key:
    description: 'Key for the python cache'
    required: false
    default: ''  # if you don't set a key, it doesn't cache
  deps:
    description: 'Extra dependency groups (comma separated)'
    required: true
  opencl:
    description: "Install OpenCL?"
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
    - name: Cache Python packages (Linux)
      if: ${{ inputs.key != '' }} && ${{ runner.os == 'Linux' }}
      uses: actions/cache@v4
      with:
        # TODO: key should include input.deps, but it can't since it can't contain commas
        path: ${{ env.Python3_ROOT_DIR }}/lib/python${{ inputs.python-version }}/site-packages }}
        key: python-package-${{ inputs.key }}-${{ hashFiles('**/setup.py') }}
    - name: Cache Python packages (macOS)
      if: ${{ inputs.key != '' }} && ${{ runner.os == 'macOS' }}
      uses: actions/cache@v4
      with:
        path: '/Users/runner/Library/Python/${{ inputs.python-version }}/lib/python/site-packages'
        key: osx-python-package-${{ inputs.key }}-${{ hashFiles('**/setup.py') }}
    - name: Cache downloads (Linux)
      if: ${{ inputs.key != '' }} && ${{ runner.os == 'Linux' }}
      uses: actions/cache@v4
      with:
        path: '~/.cache/tinygrad/downloads/'
        key: downloads-cache-${{ inputs.key }}-${{ env.DOWNLOAD_CACHE_VERSION }}
    - name: Cache downloads (macOS)
      if: ${{ inputs.key != '' }} && ${{ runner.os == 'macOS' }}
      uses: actions/cache@v4
      with:
        path: '~/Library/Caches/tinygrad/downloads/'
        key: osx-downloads-cache-${{ inputs.key }}-${{ env.DOWNLOAD_CACHE_VERSION }}
    - name: Install dependencies
      shell: bash
      run: pip install -e ".[${{ inputs.deps }}]"  --extra-index-url https://download.pytorch.org/whl/cpu --extra-index-url https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/Triton-Nightly/pypi/simple/
    - name: Install OpenCL
      if: ${{ inputs.opencl == 'true' }}
      shell: bash
      run: |
        echo 'Acquire::http::Pipeline-Depth "5";' | sudo tee -a /etc/apt/apt.conf.d/99parallel
        echo "deb [ allow-insecure=yes ] https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
        sudo apt update || true
        sudo apt install --allow-unauthenticated -y --no-install-recommends opencl-headers \
          intel-oneapi-runtime-openmp=2023.2.1-16 intel-oneapi-runtime-compilers-common=2023.2.1-16 intel-oneapi-runtime-compilers=2023.2.1-16 \
          intel-oneapi-runtime-dpcpp-sycl-opencl-cpu=2023.2.1-16 intel-oneapi-runtime-tbb-common=2021.10.0-49541 \
          intel-oneapi-runtime-tbb=2021.10.0-49541 intel-oneapi-runtime-opencl=2023.2.1-16